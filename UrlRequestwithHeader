package One;

import io.restassured.RestAssured;
import io.restassured.RestAssured.*;
import io.restassured.matcher.RestAssuredMatchers.*;
import io.restassured.response.Response;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;


import java.nio.charset.Charset;

import static org.testng.Assert.assertEquals;

import org.hamcrest.Matchers.*;
import org.json.JSONException;
import org.json.JSONObject;
import org.testng.annotations.Test;

public class NewTest2 {
	
	
  @Test
  public void f() throws JSONException, IOException {

	  try {

		    URL url = new URL("https://jsonplaceholder.typicode.com/todos/1");
		    HttpURLConnection conn = (HttpURLConnection) url.openConnection();

		    // Set Headers
		    conn.setRequestProperty("Content-Type", "application/json");
		    conn.setRequestProperty("CustomHeader", "hesder1");


		    // Request not successful
		    if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
		        throw new RuntimeException("Request Failed. HTTP Error Code: " + conn.getResponseCode());
		    }

		    // Read response
		    BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
		    
		    String jsonText = readAll(br);
		      JSONObject json = new JSONObject(jsonText);
		    
		   		    br.close();
		  		    
		    System.out.println("json: "+json);
		    conn.disconnect();
		} catch (IOException e) {
		    e.printStackTrace();
		}
	  
  }
  
  private static String readAll(Reader rd) throws IOException {
	    StringBuilder sb = new StringBuilder();
	    int cp;
	    while ((cp = rd.read()) != -1) {
	      sb.append((char) cp);
	    }
	    return sb.toString();
	  }
  

}
